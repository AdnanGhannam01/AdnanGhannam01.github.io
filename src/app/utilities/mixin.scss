@mixin setPosition($t: auto, $r: auto, $b: auto, $l: auto) {
    top: $t;
    right: $r;
    bottom: $b;
    left: $l;
}

@mixin absolute($t: auto, $r: auto, $b: auto, $l: auto, $x: 0px, $y: 0px) {
    position: absolute;
    @include setPosition($t, $r, $b, $l);
    transform: translate($x, $y);
}

@mixin absoluteCenter() {
    @include absolute(50%, auto, auto, 50%, -50%, -50%);
}

@mixin flex($jc: center, $ai: center, $dir: row, $wrap: nowrap) {
    display: flex;
    justify-content: $jc;
    align-items: $ai;
    flex-direction: $dir;
    flex-wrap: $wrap;
}

@mixin grid($r, $c, $rg: 0px, $cg: 0px) {
    display: grid;
    grid-template-rows: $r;
    grid-template-columns: $c;
    row-gap: $rg;
    column-gap: $cg;
}

@mixin hasBackground($url) {
    background-image: url($url);
    background-position: center;
    background-size: contain;
    background-repeat: no-repeat;
}

@mixin size($s) {
    width: $s;
    height: $s;
}

@mixin minSize($s) {
    min-width: $s;
    min-height: $s;
}

@mixin withBorder() {
    $size: 3px;
    
    &::after {
        display: inline-block;
        background-color: var(--clr-rounded-border);
    }

    &.active {
        &::after {
            content: '';
        }
    }

    &.left {
        &::after {
            @include absolute(0, auto, 0, 0);
            border-radius: 0 7px 7px 0; 
            width: $size;
        }
    }

    &.right {
        &::after {
            @include absolute(0, 0, 0, auto);
            border-radius: 7px 0 0 7px;
            width: $size;
        }
    }

    &.bottom {
        &::after {
            @include absolute(auto, 0, 0, 0);
            border-radius: 7px 7px 0 0;
            height: $size;
        }
    }

    &.top {
        &::after {
            @include absolute(0, 0, auto, 0);
            border-radius: 0 0 7px 7px;
            height: $size;
        }
    }
}